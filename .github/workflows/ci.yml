#
# Copyright 2021 SkyAPM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.4.29']
#        php-version: ['8.1', '8.0', '7.4', '7.3', '7.2', '7.1', '7.0']
        skywalking-version: ['9.0.0']
#        , '8.9.1', '8.9.0', '8.8.1', '8.7.0-es7', '8.7.0-es6', '8.6.0-es7', '8.6.0-es6', '8.5.0-es6', '8.4.0-es6'
    name: PHP ${{ matrix.php-version }} Test on SW ${{ matrix.skywalking-version }}
    services:
      skywalking:
        image: apache/skywalking-oap-server:${{ matrix.skywalking-version }}
        ports:
          - 11800:11800
          - 12800:12800
      mysql:
        image: mysql:5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: "skywalking"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
      memcached:
        image: memcached
        ports:
          - 11211:11211
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Check License
        uses: apache/skywalking-eyes@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install library
        run: |
          sudo apt-get update
          sudo apt-get install -y wget autoconf automake make g++ libssl-dev
          sudo apt-get install -y pkg-config build-essential autoconf bison re2c libxml2-dev libsqlite3-dev
          sudo apt-get install -y curl libcurl4-openssl-dev zlib1g-dev
          sudo apt-get install -y nginx gdb unzip

      - name: Setup PHP
        run: |
          sudo mkdir -p /tmp/php${{ matrix.php-version }}
          cd /tmp/php${{ matrix.php-version }}
          sudo wget https://github.com/php/php-src/archive/refs/tags/php-${{ matrix.php-version }}.tar.gz
          sudo tar zxf php-${{ matrix.php-version }}.tar.gz
          cd php-src-php-${{ matrix.php-version }}
          sudo ./buildconf --force
          sudo ./configure --with-config-file-scan-dir=/usr/local/lib/conf.d --enable-debug --enable-fpm --with-curl \
            --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli --enable-pdo --with-openssl
          sudo make -j$(nproc)
          sudo make install
          sudo mv php.ini-development /usr/local/lib/php.ini
          sudo mv /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf
          sudo mv /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf
          sudo sed -i "s#include=NONE#include=/usr/local#g" /usr/local/etc/php-fpm.conf
          sudo groupadd nobody
          sudo mkdir -p /usr/local/lib/conf.d/

      - name: Setup Redis Client
        run: |
          sudo mkdir -p /tmp/redis
          cd /tmp/redis
          sudo wget https://github.com/phpredis/phpredis/archive/refs/tags/5.3.7.tar.gz
          sudo tar zxf 5.3.7.tar.gz
          cd phpredis-5.3.7
          sudo phpize
          sudo ./configure
          sudo make
          sudo make install

#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        env:
#          YAR_LIBS: libcurl4-openssl-dev
#        with:
#          php-version: ${{ matrix.php-version }}
#          extensions: curl, json, redis, pdo_mysql, memcached, yar-laruence/yar@yar-2.2.0
#          tools: php-config, phpize, composer

      - name: Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk/e2e
          composer install

      - name: Build SkyWalking-PHP
        run: |
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk
          phpize
          ./configure
          make -j$(nproc)
          sudo make install

      - name: Start FPM and Nginx
        run: |
          ulimit -c unlimited
          sudo cp e2e/00-redis.ini $(php -i | grep 'additional .ini' | sed -e "s|.*=> s*||")
          sudo cp e2e/99-skywalking.ini $(php -i | grep 'additional .ini' | sed -e "s|.*=> s*||")
          sudo cp e2e/nginx.conf /etc/nginx/conf.d/
          sudo cp -r e2e/vendor e2e/tests /var/www/html/
          sudo cp e2e/tests.php e2e/index.php /var/www/html/
          sudo php-fpm -F &
          sudo systemctl restart nginx
          sleep 15


      - name: E2E tests
        run: |
          ulimit -c unlimited
          cd e2e
          sudo php -dskywalking.enable=0 e2e.php ${{ matrix.php-version }}
          sudo cat /tmp/skywalking-php.log

      - name: Backtrace
        if: failure()
        run: |
          sudo mkdir -p /tmp/crash
          sudo cp /var/crash/* /tmp/crash/
          sudo chmod 0644 /tmp/crash/*
          cd /tmp/crash
          ls -l
          # sudo apport-unpack _usr_sbin_php-fpm${{ matrix.php-version }}.0.crash unpack
          # sudo gdb -ex="bt" -ex="quit" -c unpack/CoreDump

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: crashes
          path: /tmp/crash

  publish:
    if: github.repository == 'SkyAPM/SkyAPM-php-sdk'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        php-version: ['8.1', '8.0', '7.4', '7.3', '7.2', '7.1', '7.0']
    name: Publish PHP ${{ matrix.php-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            skyapm/skywalking-php
            ghcr.io/skyapm/skywalking-php

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/*/} | sed "s/\//\-/")

      - name: Check output
        run: echo ${{ steps.vars.outputs.tag }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          build-args: PHP_VERSION=${{ matrix.php-version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            skyapm/skywalking-php:${{ steps.vars.outputs.tag }}-${{ matrix.php-version }}-fpm-alpine
            ghcr.io/skyapm/skywalking-php:${{ steps.vars.outputs.tag }}-${{ matrix.php-version }}-fpm-alpine
          labels: ${{ steps.meta.outputs.labels }}
